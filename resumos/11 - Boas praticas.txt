11.1. Analisando e definindo melhor o escopo das transações

@Transactional -> abre uma transação quando o método é chamado. O método só executado se tiver uma transação. 

Todos os métodos publicos que tem mudança no banco de dados é legal que tenha a notação
@Transactional.

Evitar problemas de inconsistencia no banco de dados.


11.2. Refinando o payload de cadastro com @JsonIgnoreProperties


@JsonIgnoreProperties(value={"nome"}, allowGetters = true) 	// Ignore a propriedade 'nome' do atributo cozinha, apenas na desserialização; // Ignorando apenas no set
private Cozinha cozinha;


11.3. Criando classes de mixin para usar as anotações do Jackson

Mixin é uma classe que possui membros de uma outra classe original.

Onde a configuração ficam na classe Mixin.

@Component
public class JacksonMixinModule extends SimpleModule{

	private static final long serialVersionUID = 1L;
	
	public JacksonMixinModule() {
		setMixInAnnotation(Restaurante.class, RestauranteMixin.class);
		setMixInAnnotation(Cozinha.class, CozinhaMixin.class);
		setMixInAnnotation(Cidade.class, CidadeMixin.class);
	}
}

11.5. Antes de estudar sobre data/hora: relembrando as aulas de geografia e entendendo os fusos horários

timezone = fuso horario

offset = diferença de horarios

utc = padrão de horario universal

gmt = horario de granuich 

brt = horario de brasilia  | brt = utc - 3 



11.6. Boas práticas para trabalhar com data e hora em REST APIs


















